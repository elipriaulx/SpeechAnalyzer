<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="kstidSADBRestoreSucceeded" xml:space="preserve">
    <value>The Speech Analyzer database was successfully restored from backup.\n\nThe failed database has been renamed to {0}.</value>
  </data>
  <data name="kstidHierarchicalRowChildCountMedFmt" xml:space="preserve">
    <value>({0} rec.)</value>
  </data>
  <data name="kstidFileTypeAll" xml:space="preserve">
    <value>All Files (*.*)|*.*</value>
  </data>
  <data name="kstidIdenticalMD5Msg" xml:space="preserve">
    <value>No transcription was found for the specified file:
{0},

An existing transcription was found for the file:
{1},

The audio data for both files is identical. 
What would you like to do?</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="kimidSilLogo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\kimidSilLogo.jpg;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="kstidHierarchicalRowChildCountLongFmt" xml:space="preserve">
    <value>({0} records)</value>
  </data>
  <data name="kstidErrorSavingSADB" xml:space="preserve">
    <value>Error saving Speech Analyzer database.\n\n{0}</value>
  </data>
  <data name="kstidFileTypeMapFile" xml:space="preserve">
    <value>TECkit Uncompiled Mapping Files (*.map)|*.map</value>
  </data>
  <data name="kstidHierarchicalRowChildCountShortFmt" xml:space="preserve">
    <value>({0})</value>
  </data>
  <data name="kstidSADBRestoreFailed" xml:space="preserve">
    <value>The Speech Analyzer database could not be restored from backup.\n\n{0}\n\nThe failed database has been renamed to {1}.</value>
  </data>
  <data name="kstidErrorInitializingDocWriter" xml:space="preserve">
    <value>Error initializing SA Document writer.\n\n{0}</value>
  </data>
  <data name="kstidOFDFindConverterCaption" xml:space="preserve">
    <value>Find Converter Mapping File</value>
  </data>
  <data name="kstidErrorInitializingDocReader" xml:space="preserve">
    <value>Error initializing SA Document reader.\n\n{0}</value>
  </data>
  <data name="kimidExpand" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Expand.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="kstidSADBRestoreCancelled" xml:space="preserve">
    <value>The failed database has been renamed to {0}.</value>
  </data>
  <data name="kstidErrorOpeningSADB" xml:space="preserve">
    <value>Error opening Speech Analyzer database.\n\n{0}\n\nWould you like to try restoring the from the backup?</value>
  </data>
  <data name="kimidCollapse" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Collapse.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="kstidFileTypeTecFile" xml:space="preserve">
    <value>TECkit Compiled Mapping Files (*.tec)|*.tec</value>
  </data>
  <data name="kstidInvalidWaveFile" xml:space="preserve">
    <value>{1} is not a valid wave file.</value>
  </data>
  <data name="kstidFileTypeCCFile" xml:space="preserve">
    <value>CC Files (*.cct)|*.cct</value>
  </data>
  <data name="kstidWaveFileNotFound" xml:space="preserve">
    <value>{0} cannot be found.</value>
  </data>
  <data name="kimidSilLogo1" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\kimidSilLogo.jpg;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="kstidReadOnlyFolderMsg" xml:space="preserve">
    <value>You are attempting to save the transcriptions for {0} in a location for which you do not have write access. Please specify another location in which to make a copy of {1} along with its transcription file ({2}).</value>
  </data>
  <data name="kstidOldDbAudioFileMissingMsg" xml:space="preserve">
    <value>The audio file '{0}' does not exist.\nWould you like its record removed from the old database?</value>
  </data>
  <data name="kstidOldDbConverionMsg" xml:space="preserve">
    <value>Versions of Speech Analyzer 3.0 before Beta 4 stored audio file\ntranscriptions in a central database. The method of storing an\naudio file’s transcription has changed so each transcribed audio\nfile possesses a companion file containing those transcriptions.\n\nThe central transcription database has been detected. Click OK\nto begin the process of converting the transcription data from the\ncentral database to individual companion files to the audio files.</value>
  </data>
  <data name="kstidCnvtrGridCnvtrHdg" xml:space="preserve">
    <value>Converter</value>
  </data>
  <data name="kstidCnvtrGridTransHdg" xml:space="preserve">
    <value>Transcription</value>
  </data>
  <data name="kstidCnvtrGridFontHdg" xml:space="preserve">
    <value>Legacy Font</value>
  </data>
  <data name="kstidInvalidMusicXMLFile" xml:space="preserve">
    <value>'{0}' is not a valid MusicXML file.\n\nFile will not be loaded.</value>
  </data>
  <data name="kstidMusicXMLValidationErrMsg" xml:space="preserve">
    <value>The following errors were encountered while validating {0}:\n\n{1}</value>
    <comment>First parameter is music XML file name; second parameter is the error message.</comment>
  </data>
</root>