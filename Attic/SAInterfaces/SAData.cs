using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;
using System.IO;
using System.Data;
using System.Resources;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Diagnostics;
using SIL.Pa.Database;

namespace SIL.SpeechTools
{
	#region ISAData
	/// ----------------------------------------------------------------------------------------
	/// <summary>
	/// Interface for passing processing data to and from SA.
	/// </summary>
	/// ----------------------------------------------------------------------------------------
	[ComVisible(true)]
	[Guid("4159B250-D35E-473d-A5DA-5E900CEE8A46")]
	[InterfaceType(ComInterfaceType.InterfaceIsIDispatch)]
	public interface ISAData
	{
		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Called to prepare the COM object to deliver data for an audio file that's been
		/// saved in a database. If the wave file's data cannot be found in any database,
		/// then false is returned. Otherwise, true is returned.
		/// </summary>
		/// ------------------------------------------------------------------------------------
		bool Initialize(string wavFileName);

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Returns an MD5 generated hash code from the contents of the wave file.
		/// </summary>
		/// ------------------------------------------------------------------------------------
		string MD5HashCode
		{
			get;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets the Desciption field stored in the SA chunk of our old RIFF structure.
		/// </summary>
		/// ------------------------------------------------------------------------------------
		string Description
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets the SA flags.
		/// </summary>
		/// ------------------------------------------------------------------------------------
		ushort Flags
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets recording file format: 0 = UTT, 1 = WAV, 2 = MAC, 3 = TIMIT
		/// </summary>
		/// ------------------------------------------------------------------------------------
		int RecordFileFormat
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets recording time stamp
		/// </summary>
		/// ------------------------------------------------------------------------------------
		int RecordTimeStamp
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets recording band width
		/// </summary>
		/// ------------------------------------------------------------------------------------
		uint RecordBandWidth
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets recording sample size
		/// </summary>
		/// ------------------------------------------------------------------------------------
		int RecordSampleSize
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets the number of samples
		/// </summary>
		/// ------------------------------------------------------------------------------------
		uint NumberOfSamples
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets maximum signal value
		/// </summary>
		/// ------------------------------------------------------------------------------------
		int SignalMax
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets minimum signal value
		/// </summary>
		/// ------------------------------------------------------------------------------------
		uint SignalMin
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets signal banc width
		/// </summary>
		/// ------------------------------------------------------------------------------------
		uint SignalBandWidth
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets signal effective sample size.
		/// </summary>
		/// ------------------------------------------------------------------------------------
		int SignalEffectiveSampleSize
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Gets or sets signal effective sample size.
		/// </summary>
		/// ------------------------------------------------------------------------------------
		ushort CalcFreqLow
		{
			get;
			set;
		}
	
		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		ushort CalcFreqHigh
		{
			get;
			set;
		}
		
		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		ushort CalcVoicingThd
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		ushort CalcPercentChng
		{
			get;
			set;
		}
	
		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		ushort CalcGrpSize
		{
			get;
			set;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		ushort CalcIntrpGap
		{
			get;
			set;
		}

		int ShowPitchWindow();
		void ReleasePitchHdc(); 
	
	}

	#endregion

	/// ----------------------------------------------------------------------------------------
	/// <summary>
	/// 
	/// </summary>
	/// ----------------------------------------------------------------------------------------
	[ProgId("SAInterfaces.SAProcessingData")]
	[ClassInterface(ClassInterfaceType.None)]
	[GuidAttribute("0464949B-A110-4eb7-941E-BB7683D3FFAC")]
	[ComVisible(true)]
	public class SAData : ISAData
	{
		private Graphics m_grPanel = null;

		#region ISAData Members

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public SAData()
		{
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// <returns></returns>
		/// ------------------------------------------------------------------------------------
		public int ShowPitchWindow()
		{
			Form frm = new Form();
			frm.Size = new Size(200, 200);
			Panel pnl = new Panel();
			pnl.Dock = DockStyle.Fill;
			frm.Controls.Add(pnl);
			frm.Show();

			m_grPanel = pnl.CreateGraphics();
			
			return (int)m_grPanel.GetHdc();
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public void ReleasePitchHdc()
		{
			m_grPanel.ReleaseHdc();
		}
		
		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Called to prepare the COM object to deliver data for an audio file that's been
		/// saved in a database. If the wave file's data cannot be found in any database,
		/// then false is returned. Otherwise, true is returned.
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public bool Initialize(string wavFileName)
		{
			if (DBUtils.DatabaseConnection == null)
			{
				MessageBox.Show("No Connection: " + wavFileName);
			}
			else
			{
				MessageBox.Show("Initialized!\nDBConnection: " + DBUtils.DatabaseConnection.ConnectionString +
					"\nwavFileName: " + wavFileName);
			}
			
			return true;
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// Returns an MD5 generated hash code from the contents of the wave file.
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public string MD5HashCode
		{
			get {return "OOOO! IT'S WORKING";}
		}
		
		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public string Description
		{
			get {return "We have lift-off";}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public ushort Flags
		{
			get	{return 11;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public int RecordFileFormat
		{
			get {return 22;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public int RecordTimeStamp
		{
			get {return 33;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public uint RecordBandWidth
		{
			get	{return 44;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public int RecordSampleSize
		{
			get {return 55;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public uint NumberOfSamples
		{
			get {return 66;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public int SignalMax
		{
			get {return 77;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public uint SignalMin
		{
			get {return 88;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public uint SignalBandWidth
		{
			get {return 99;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public int SignalEffectiveSampleSize
		{
			get {return 111;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public ushort CalcFreqLow
		{
			get {return 122;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public ushort CalcFreqHigh
		{
			get {return 133;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public ushort CalcVoicingThd
		{
			get {return 144;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public ushort CalcPercentChng
		{
			get {return 155;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public ushort CalcGrpSize
		{
			get {return 166;}
			set
			{
			}
		}

		/// ------------------------------------------------------------------------------------
		/// <summary>
		/// 
		/// </summary>
		/// ------------------------------------------------------------------------------------
		public ushort CalcIntrpGap
		{
			get {return 177;}
			set
			{
			}
		}

		#endregion
	}
}
